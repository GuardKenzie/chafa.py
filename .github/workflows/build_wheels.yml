name: ðŸ”¨ Build

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: ðŸŽ¡ ${{ matrix.os }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3

      - name: Setup UCRT64
        uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-2019'
        with:
          msystem: ucrt64
          install: >-
            git
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-glib2
            mingw-w64-ucrt-x86_64-pkg-config
            mingw-w64-ucrt-x86_64-make
            automake
            autoconf
            libtool
            make

      - name: Build Windows DLLs
        if: matrix.os == 'windows-2019'
        shell: msys2 {0}
        run: |
          git clone --branch 1.12.5 https://github.com/hpjansson/chafa libchafa_src
          cd libchafa_src
          ./autogen.sh --without-tools --host=mingw64 && make

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  make_sdist:
    name: ðŸ’½ Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  upload_all:
    name: ðŸ“¬ Deliver to PyPi
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.8.8
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
